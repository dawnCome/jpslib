!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.jpslib=e():t.jpslib=e()}(this,function(){return function(t){function e(r){if(i[r])return i[r].exports;var n=i[r]={exports:{},id:r,loaded:!1};return t[r].call(n.exports,n,n.exports,e),n.loaded=!0,n.exports}var i={};return e.m=t,e.c=i,e.p="",e(0)}([function(t,e,i){t.exports=i(1)},function(t,e){t.exports=function(){var t={};t.subscribe=function(e){if(!e.listNotificationInterested||"function"!=typeof e.listNotificationInterested||!e.executeNotification||"function"!=typeof e.executeNotification)throw new Error("subscriber must implement ISubscriber");var i=e.listNotificationInterested();if(!(i instanceof Array))throw new Error("interface listNotificationInterested of subscriber must return Array type");i.forEach(function(t){if("string"!=typeof t)throw new Error("interested notification name must be String type")}),t._removeSubscribersFromMap(e),i.forEach(function(i){t._addSubscriberToMap(i,e)})},t.publish=function(e){if(!e.getName||"function"!=typeof e.getName)throw new Error("notification must implement INotification");var i=t._getSubscribersFromMap(e.getName()).concat();i.forEach(function(t){t.executeNotification(e)})},t.createNotification=function(e,i,r){if("string"==typeof e){var n=function(e,i,r){t.INotification.call(this,e,i,r)};return t._utils.extendClass(n,t.INotification),new n(e,i,r)}throw new Error("notification name must be String type")},t.unsubscribe=function(e,i){if(!i.listNotificationInterested||"function"!=typeof i.listNotificationInterested)throw new Error("subscriber must implement ISubscriber");if("string"!=typeof e)throw new Error("interested notification name must be String type");t._removeSubscriberFromMap(e,i)},t.unsubscribeAll=function(e){if(!e.listNotificationInterested||"function"!=typeof e.listNotificationInterested)throw new Error("subscriber must implement ISubscriber");if("string"!=typeof notificationname)throw new Error("interested notification name must be String type");t._removeSubscribersFromMap(e)},t._notificationMap={},t._getSubscribersFromMap=function(e){return void 0===t._notificationMap[e]?[]:t._notificationMap[e]},t._getInterestedNamesFromMap=function(e){var i,r=[];for(var n in t._notificationMap)i=t._notificationMap[n].filter(function(t){return t===e}),i.length>0&&r.push(n);return r},t._hasSubscriberFromMap=function(e,i){var r=t._getInterestedNamesFromMap(i),n=r.filter(function(t){return t===e});return n.length>0},t._addSubscriberToMap=function(e,i){if(t._hasSubscriberFromMap(e,i));else{var r=t._getSubscribersFromMap(e);0===r.length&&(r=t._notificationMap[e]=[]),r.push(i)}return!0},t._removeSubscriberFromMap=function(e,i){var r=t._getSubscribersFromMap(e),n=r.indexOf(i);return n>-1&&r.splice(n,1),r},t._removeSubscribersFromMap=function(e){var i=t._getInterestedNamesFromMap(e);return i.forEach(function(i){var r=t._removeSubscriberFromMap(i,e);r&&0===r.length&&delete t._notificationMap[i]}),!0},t._utils={extendClass:function(t,e){if("function"!=typeof t)throw new TypeError("extendClass child must be function type");if("function"!=typeof e)throw new TypeError("extendClass parent must be function type");if(t!==e){var i=new Function;return i.prototype=e.prototype,t.prototype=new i,t.prototype.constructor=t}}},t.ISubscriber=function(){},t.ISubscriber.prototype.listNotificationInterested=function(){return[]},t.ISubscriber.prototype.executeNotification=function(t){},t.INotification=function(t,e,i){if(null===t||void 0===t)throw new Error("notification must have a name");if("string"!=typeof t)throw new TypeError("notification name must be string type");this._name=t,this._body=e,this._type=i},t.INotification.prototype.getName=function(){return this._name},t.INotification.prototype.getBody=function(){return this._body},t.INotification.prototype.getType=function(){return this._type}}()}])});